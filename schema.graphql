enum TokenType {
  Standard
  Stable
}

type Token @entity {
  id: ID!

  symbol: String!
  name: String!
  decimals: BigInt!
  totalSupply: BigInt!

  type: TokenType!

  price: BigDecimal!
  updated: BigInt!
}

type TokenGeyser @entity {
  id: ID!

  stakingToken: Token!
  rewardToken: Token!

  bonusPeriodSec: BigInt!
  durationSec: BigInt!
  sharesPerToken: BigInt!
  globalSharesSec: BigDecimal!

  users: BigInt!
  operations: BigInt!

  staked: BigDecimal!
  rewards: BigDecimal!
  unlockedRewards: BigDecimal!
  lockedRewards: BigDecimal!

  # unlockedRewards stores the state of the unlocked pool,
  # which varies over time as people stake/unstake.
  # This total variable stores the total unlocked despite people's claimed amounts.
  totalUnlockedRewards: BigDecimal!

  # lockedRewards stores the state of the locked pool,
  # which varies over time as people stake/unstake.
  # This total variable stores the total locked despite amounts moved to unlocked pool.
  totalLockedRewards: BigDecimal!

  stakedUSD: BigDecimal!
  rewardsUSD: BigDecimal!

  apr: BigDecimal!
  tvl: BigDecimal!
  updated: BigInt!

  createdTimestamp: BigInt!
  createdBlock: BigInt!
}

type User @entity {
  id: ID!

  operations: BigInt!
  earned: BigDecimal!
  totalStaked: BigDecimal!
  
  stakes: [Stake!]
}

type Stake @entity {
  id: ID!

  amount: BigDecimal!
  user: User!
  shares: BigDecimal!

  timestamp: BigInt!
}
